---

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  create: true
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name:

frontend:
  image:
    repository: evagalleryone/gallery
    tag: latest
    imagePullPolicy: IfNotPresent

  replicaCount: 1
  service:
    port: 80
    type: ClusterIP
    # --- service type LoadBalancer
    # type: LoadBalancer
    # httpsPort: 443
    # annotations: {}
    # loadBalancerIP: 172.16.0.1
  
  config:
    public_backend_url: ""

  env: {}

  resources: {}
    # We usually recommend not to specify default resources and to leave this as a conscious
    # choice for the user. This also increases chances charts run on environments with little
    # resources, such as Minikube. If you do want to specify resources, uncomment the following
    # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
    # limits:
    #   cpu: 100m
    #   memory: 128Mi
    # requests:
    #   cpu: 100m
    #   memory: 128Mi

  nodeSelector: {}

  tolerations: []

  affinity: {}

  volumeMounts: []

  volumes: []

  podAnnotations: {}

  podSecurityContext: {}
    # fsGroup: 2000

  securityContext: {}
    # capabilities:
    #   drop:
    #   - ALL
    # readOnlyRootFilesystem: true
    # runAsNonRoot: true
    # runAsUser: 1000

  volumeMounts: {}

  livenessProbe:
    httpGet:
      path: /healthyz
      port: http

  readinessProbe:
    httpGet:
      path: /readyz
      port: http

  startupProbe:
    initialDelaySeconds: 15
    periodSeconds: 5
    timeoutSeconds: 5
    successThreshold: 1
    failureThreshold: 60
    httpGet:
      path: /readyz
      port: http

backend:
  image:
    repository: evagalleryone/backend
    tag: latest
    imagePullPolicy: IfNotPresent

  config:
    session_lifetime: 600
    log_requests: true
    subscan_url: https://assethub-kusama.subscan.io

  # the secret containing Google E-mail registration data in the following format
  #
  # emailRegistrationGoogleSecret:
  #   clientId: ...
  #   clientSecret: ...
  #   email: ...
  #   emailRefreshToken: ...
  #   mailbox: ...
  emailRegistrationGoogleSecret: ""

  # these values must have an override for auth and registration to work !
  extraEnv:
    # Server domain used for auth callbacks
    - name: AUTH_CALLBACK_DOMAIN
      value: http://localhost:3000

  persistence:
    enabled: true
    # storageClass: "-"
    accessMode: ReadWriteMany
    size: 64Gi

  replicaCount: 1
  service:
    port: 80
    type: ClusterIP
    # --- service type LoadBalancer
    # type: LoadBalancer
    # httpsPort: 443
    # annotations: {}
    # loadBalancerIP: 172.16.0.1

  resources: {}
    # We usually recommend not to specify default resources and to leave this as a conscious
    # choice for the user. This also increases chances charts run on environments with little
    # resources, such as Minikube. If you do want to specify resources, uncomment the following
    # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
    # limits:
    #   cpu: 100m
    #   memory: 128Mi
    # requests:
    #   cpu: 100m
    #   memory: 128Mi

  nodeSelector: {}

  tolerations: []

  affinity: {}

  volumeMounts: []

  volumes: []

  podAnnotations: {}

  podSecurityContext: {}
    # fsGroup: 2000

  securityContext: {}
    # capabilities:
    #   drop:
    #   - ALL
    # readOnlyRootFilesystem: true
    # runAsNonRoot: true
    # runAsUser: 1000

  volumeMounts: {}

  livenessProbe:
    httpGet:
      path: /healthyz
      port: http

  readinessProbe:
    httpGet:
      path: /readyz
      port: http

  startupProbe:
    initialDelaySeconds: 15
    periodSeconds: 5
    timeoutSeconds: 5
    successThreshold: 1
    failureThreshold: 60
    httpGet:
      path: /readyz
      port: http

nft:
  image:
    repository: evagalleryone/nft
    tag: latest
    imagePullPolicy: IfNotPresent

  walletSecret:
    name: gallery-wallet-secret
    key: mnemonic
  ipfsCredentialsSecret: 
    name: ipfs-credentials-secret
    keyUser: user
    keyPassword: pass
    keyUrl: url

  config:
    wss_rpc_provider: wss://sys.ibp.network/asset-hub-paseo
    collection_id: 456    # E.V.A. gallery collection ID
    ipfs_name: ipfs

  extraEnv: []

  replicaCount: 1
  service:
    port: 80
    type: ClusterIP
    # --- service type LoadBalancer
    # type: LoadBalancer
    # httpsPort: 443
    # annotations: {}
    # loadBalancerIP: 172.16.0.1

  env: {}

  resources: {}
    # We usually recommend not to specify default resources and to leave this as a conscious
    # choice for the user. This also increases chances charts run on environments with little
    # resources, such as Minikube. If you do want to specify resources, uncomment the following
    # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
    # limits:
    #   cpu: 100m
    #   memory: 128Mi
    # requests:
    #   cpu: 100m
    #   memory: 128Mi

  nodeSelector: {}

  tolerations: []

  affinity: {}

  volumeMounts: []

  volumes: []

  podAnnotations: {}

  podSecurityContext: {}
    # fsGroup: 2000

  securityContext: {}
    # capabilities:
    #   drop:
    #   - ALL
    # readOnlyRootFilesystem: true
    # runAsNonRoot: true
    # runAsUser: 1000

  volumeMounts: {}

  livenessProbe:
    httpGet:
      path: /healthyz
      port: http

  readinessProbe:
    httpGet:
      path: /readyz
      port: http

  startupProbe:
    initialDelaySeconds: 15
    periodSeconds: 5
    timeoutSeconds: 5
    successThreshold: 1
    failureThreshold: 60
    httpGet:
      path: /readyz
      port: http

ai:
  image:
    repository: evagalleryone/ai
    tag: latest
    imagePullPolicy: IfNotPresent

  config:
    workers: 10

  ## Configuration values for the postgreql database with access.
  ##
  database:
    credentialsSecretName: "eva-cluster-secret"
    # content
      # user: The name of the user account.
      # password: The password for the user account.
      # dbname: The name of the database that the user has access to by default.
      # host: The name of the host of the database. This references the Service of the primary Postgres instance.
      # port: The port that the database is listening on.
      # uri: A PostgreSQL connection URI that provides all the information for logging into the Postgres database.

  persistence:
    enabled: true
    # storageClass: "-"
    accessMode: ReadWriteMany
    size: 64Gi

  extraEnv: []

  replicaCount: 1
  service:
    port: 80
    type: ClusterIP
    # --- service type LoadBalancer
    # type: LoadBalancer
    # httpsPort: 443
    # annotations: {}
    # loadBalancerIP: 172.16.0.1

  resources: {}
    # We usually recommend not to specify default resources and to leave this as a conscious
    # choice for the user. This also increases chances charts run on environments with little
    # resources, such as Minikube. If you do want to specify resources, uncomment the following
    # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
    # limits:
    #   cpu: 100m
    #   memory: 128Mi
    # requests:
    #   cpu: 100m
    #   memory: 128Mi

  nodeSelector: {}

  tolerations: []

  affinity: {}

  volumeMounts: []

  volumes: []

  podAnnotations: {}

  podSecurityContext: {}
    # fsGroup: 2000

  securityContext: {}
    # capabilities:
    #   drop:
    #   - ALL
    # readOnlyRootFilesystem: true
    # runAsNonRoot: true
    # runAsUser: 1000

  volumeMounts: {}

  livenessProbe:
    httpGet:
      path: /healthz
      port: http

  readinessProbe:
    httpGet:
      path: /readyz
      port: http

  startupProbe:
    initialDelaySeconds: 15
    periodSeconds: 5
    timeoutSeconds: 5
    successThreshold: 1
    failureThreshold: 60
    httpGet:
      path: /readyz
      port: http

ingress:
  enabled: true
  className: ""
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  # host: eva.minikube.local
  paths:
    - path: "/"
      pathType: Prefix

  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local


## Configuration values for the static data generated by the E.V.A gallery.
## ref: https://artifacthub.io/packages/helm/bitnami/nginx
##
static-data:
  service:
    type: ClusterIP
    ports:
      http: 8080
      https: 8443
  serverBlock: |-
    server {
      listen 0.0.0.0:8080;
      location / {
        autoindex off;
        rewrite ^/protected/assets(/.*)$ $1 break;
        root /static-data;
      }
    }
  extraVolumes:
    - name: static-data
      persistentVolumeClaim:
        claimName: eva-backend-static-data
  extraVolumeMounts:
    - mountPath: /static-data
      name: static-data


## Configuration values for the postgresql dependency.
## ref: https://github.com/kubernetes/charts/blob/master/stable/postgresql/README.md
##
postgresql:
  ## Use the PostgreSQL chart dependency.
  ## Set to false if bringing your own PostgreSQL, and set secret value postgresql-uri.
  ##
  enabled: true
  fullnameOverride: ""
  auth:
    database: evagallery
  ## Persistent Volume Storage configuration.
  ## ref: https://kubernetes.io/docs/user-guide/persistent-volumes
  ##
  #
  ## Existing secret that holds the postgres user password
  # existingSecret: ""
  #
  ## Key in the existing secret that holds the postgres user password
  # existingSecretKey: ""
  #
  replication:
    ## Enable PostgreSQL replication (primary/secondary)
    ##
    enabled: false
  persistence:
    ## Enable PostgreSQL persistence using Persistent Volume Claims.
    ##
    enabled: true
    ## concourse data Persistent Volume Storage Class
    ## If defined, storageClassName: <storageClass>
    ## If set to "-", storageClassName: "", which disables dynamic provisioning
    ## If undefined (the default) or set to null, no storageClassName spec is
    ##   set, choosing the default provisioner.  (gp2 on AWS, standard on
    ##   GKE, AWS & OpenStack)
    ##
    # storageClass: "-"
    ## Persistent Volume Access Mode.
    ##
    accessMode: ReadWriteOnce
    ## Persistent Volume Storage Size.
    ##
    size: 10Gi


