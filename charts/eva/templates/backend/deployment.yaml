---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "eva.fullname" . }}-backend
  labels:
    {{- include "eva.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.backend.replicaCount }}
  revisionHistoryLimit: {{ .Values.backend.revisionHistoryLimit }}
  selector:
    matchLabels:
      {{- include "eva.selectorLabels" . | nindent 6 }}
      {{- include "eva.backend.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        {{- include "eva.selectorLabels" . | nindent 8 }}
        {{- include "eva.backend.selectorLabels" . | nindent 8 }}
      annotations:
        {{- toYaml .Values.backend.podAnnotations | nindent 8 }}
    spec:
    {{- with .Values.backend.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
    {{- end }}
      serviceAccountName: {{ include "eva.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.backend.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}-backend
          securityContext:
            {{- toYaml .Values.backend.securityContext | nindent 12 }}
          image: {{ .Values.backend.image.repository }}:{{ default "latest" .Values.backend.image.tag }}
          imagePullPolicy: {{ default "IfNotPresent" .Values.backend.image.imagePullPolicy }}
          env:
            - name: PORT
              value: {{ default "80" .Values.backend.service.port | quote }}
            - name: AI_ACCESS_TOKEN_SECRET
              value:  {{ template "eva.tokens.backendAi" . }}
            - name: AI_MODULE_URL
              value: http://{{ include "eva.fullname" .}}-ai.{{ .Release.Namespace }}:{{ default 80 .Values.ai.service.port }}
            - name: SUBSCAN_URL
              value: {{.Values.backend.config.subscan_url }}
            - name: DB_TYPE
              value: postgres
            - name: POSTGRES_HOST
              value: {{ template "eva.postgresql.host" . }}
            - name: POSTGRES_PORT
              value: "{{ default "5432" .Values.postgresql.containerPorts.postgresql }}"
            - name: POSTGRES_DATABASE
              value: {{ default "evagallery" .Values.postgresql.auth.database }}
            - name: POSTGRES_USER
              value: {{ default "postgres" .Values.postgresql.auth.user }}
            - name: POSTGRES_SSL
              value: "{{ default "false" .Values.postgresql.ssl }}"
            - name: POSTGRES_SSL_CA
              value: "{{ default "" .Values.postgresql.ca }}"
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                {{- if .Values.postgresql.existingSecret }}
                  name: {{ .Values.postgresql.existingSecret }}
                {{- else }}
                  name: {{ template "eva.postgresql.secret" . }}
                {{- end }}
                  key: {{ template "eva.postgresql.secretKey" . }}
            - name: HA_ACTIVE
              value: {{ .Values.backend.replicaCount | int | ge 2 | quote }}
            - name: SESSION_LIFETIME
              value:  {{ default "600" .Values.backend.config.session_lifetime | quote}}
            - name: LOG_REQUESTS
              value: {{ default "true" .Values.backend.config.log_requests | quote}}
            - name: NFT_MODULE_URL
              value: http://{{ include "eva.fullname" .}}-nft.{{ .Release.Namespace }}:80
            - name: FRONTEND_URL
              value: http://{{ include "eva.fullname" .}}-frontend.{{ .Release.Namespace }}:3000
            - name: AUTH_FAILURE_ROUTE
              value: admin/user/failure
            - name: AUTH_CREATE_USER_ROUTE
              value: admin/user/create
            - name: AUTH_RESET_USER_ROUTE
              value: admin/user/newpassword
            {{- if .Values.backend.emailRegistrationGoogleSecret }}
            - name: GOOGLE_CLIENT_ID
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.backend.emailRegistrationGoogleSecret }}
                  key: clientId
            # Google app client secret
            - name: GOOGLE_CLIENT_SECRET
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.backend.emailRegistrationGoogleSecret }}
                  key: clientSecret
            # Google email used for sending emails
            - name: GOOGLE_EMAIL
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.backend.emailRegistrationGoogleSecret }}
                  key: email
            # Google email refresh token
            - name: GOOGLE_EMAIL_REFRESH_TOKEN
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.backend.emailRegistrationGoogleSecret }}
                  key: emailRefreshToken
            # Google email mailbox (used for personalized 'from' in emails)
            - name: GOOGLE_MAILBOX
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.backend.emailRegistrationGoogleSecret }}
                  key: mailbox
            {{- end -}}
            {{- with .Values.backend.extraEnv }}
            {{- toYaml . | nindent 12 }}
            {{- end }}
          volumeMounts:
            - mountPath: /static-cache
              name: static-cache
     {{- with .Values.backend.volumeMounts }}
            {{- toYaml . | nindent 12 }}
     {{- end }}
          ports:
            - name: http
              containerPort: {{ default 80 .Values.backend.service.port }} 
              protocol: TCP
          livenessProbe:
            {{- toYaml .Values.backend.livenessProbe | nindent 12 }}
          readinessProbe:
            {{- toYaml .Values.backend.readinessProbe | nindent 12 }}
          startupProbe:
            {{- toYaml .Values.backend.startupProbe | nindent 12 }}
          resources:
            {{- toYaml .Values.backend.resources | nindent 12 }}
      {{- with .Values.backend.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
    {{- with .Values.backend.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
    {{- end }}
    {{- with .Values.backend.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
    {{- end }}
      volumes:
        - name: static-cache
        {{- if .Values.backend.persistence.enabled }}
          persistentVolumeClaim:
            claimName: {{ include "eva.fullname" . }}-backend-static-cache
        {{- else }}
          emptyDir:
            sizeLimit: {{ .Values.backend.persistence.size }}
        {{- end }}
    {{- with .Values.backend.volumes }}
        {{- toYaml . | nindent 8 }}
    {{- end }}
